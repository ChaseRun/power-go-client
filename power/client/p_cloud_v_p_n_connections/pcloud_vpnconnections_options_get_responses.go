// Code generated by go-swagger; DO NOT EDIT.

package p_cloud_v_p_n_connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IBM-Cloud/power-go-client/power/models"
)

// PcloudVpnconnectionsOptionsGetReader is a Reader for the PcloudVpnconnectionsOptionsGet structure.
type PcloudVpnconnectionsOptionsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PcloudVpnconnectionsOptionsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPcloudVpnconnectionsOptionsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPcloudVpnconnectionsOptionsGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPcloudVpnconnectionsOptionsGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPcloudVpnconnectionsOptionsGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPcloudVpnconnectionsOptionsGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPcloudVpnconnectionsOptionsGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPcloudVpnconnectionsOptionsGetOK creates a PcloudVpnconnectionsOptionsGetOK with default headers values
func NewPcloudVpnconnectionsOptionsGetOK() *PcloudVpnconnectionsOptionsGetOK {
	return &PcloudVpnconnectionsOptionsGetOK{}
}

/*PcloudVpnconnectionsOptionsGetOK handles this case with default header values.

OK
*/
type PcloudVpnconnectionsOptionsGetOK struct {
	Payload *models.Options
}

func (o *PcloudVpnconnectionsOptionsGetOK) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn-connections/options][%d] pcloudVpnconnectionsOptionsGetOK  %+v", 200, o.Payload)
}

func (o *PcloudVpnconnectionsOptionsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Options)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVpnconnectionsOptionsGetBadRequest creates a PcloudVpnconnectionsOptionsGetBadRequest with default headers values
func NewPcloudVpnconnectionsOptionsGetBadRequest() *PcloudVpnconnectionsOptionsGetBadRequest {
	return &PcloudVpnconnectionsOptionsGetBadRequest{}
}

/*PcloudVpnconnectionsOptionsGetBadRequest handles this case with default header values.

Bad Request
*/
type PcloudVpnconnectionsOptionsGetBadRequest struct {
	Payload *models.Error
}

func (o *PcloudVpnconnectionsOptionsGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn-connections/options][%d] pcloudVpnconnectionsOptionsGetBadRequest  %+v", 400, o.Payload)
}

func (o *PcloudVpnconnectionsOptionsGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVpnconnectionsOptionsGetUnauthorized creates a PcloudVpnconnectionsOptionsGetUnauthorized with default headers values
func NewPcloudVpnconnectionsOptionsGetUnauthorized() *PcloudVpnconnectionsOptionsGetUnauthorized {
	return &PcloudVpnconnectionsOptionsGetUnauthorized{}
}

/*PcloudVpnconnectionsOptionsGetUnauthorized handles this case with default header values.

Unauthorized
*/
type PcloudVpnconnectionsOptionsGetUnauthorized struct {
	Payload *models.Error
}

func (o *PcloudVpnconnectionsOptionsGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn-connections/options][%d] pcloudVpnconnectionsOptionsGetUnauthorized  %+v", 401, o.Payload)
}

func (o *PcloudVpnconnectionsOptionsGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVpnconnectionsOptionsGetForbidden creates a PcloudVpnconnectionsOptionsGetForbidden with default headers values
func NewPcloudVpnconnectionsOptionsGetForbidden() *PcloudVpnconnectionsOptionsGetForbidden {
	return &PcloudVpnconnectionsOptionsGetForbidden{}
}

/*PcloudVpnconnectionsOptionsGetForbidden handles this case with default header values.

Forbidden
*/
type PcloudVpnconnectionsOptionsGetForbidden struct {
	Payload *models.Error
}

func (o *PcloudVpnconnectionsOptionsGetForbidden) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn-connections/options][%d] pcloudVpnconnectionsOptionsGetForbidden  %+v", 403, o.Payload)
}

func (o *PcloudVpnconnectionsOptionsGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVpnconnectionsOptionsGetNotFound creates a PcloudVpnconnectionsOptionsGetNotFound with default headers values
func NewPcloudVpnconnectionsOptionsGetNotFound() *PcloudVpnconnectionsOptionsGetNotFound {
	return &PcloudVpnconnectionsOptionsGetNotFound{}
}

/*PcloudVpnconnectionsOptionsGetNotFound handles this case with default header values.

Not Found
*/
type PcloudVpnconnectionsOptionsGetNotFound struct {
	Payload *models.Error
}

func (o *PcloudVpnconnectionsOptionsGetNotFound) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn-connections/options][%d] pcloudVpnconnectionsOptionsGetNotFound  %+v", 404, o.Payload)
}

func (o *PcloudVpnconnectionsOptionsGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVpnconnectionsOptionsGetInternalServerError creates a PcloudVpnconnectionsOptionsGetInternalServerError with default headers values
func NewPcloudVpnconnectionsOptionsGetInternalServerError() *PcloudVpnconnectionsOptionsGetInternalServerError {
	return &PcloudVpnconnectionsOptionsGetInternalServerError{}
}

/*PcloudVpnconnectionsOptionsGetInternalServerError handles this case with default header values.

Internal Server Error
*/
type PcloudVpnconnectionsOptionsGetInternalServerError struct {
	Payload *models.Error
}

func (o *PcloudVpnconnectionsOptionsGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn-connections/options][%d] pcloudVpnconnectionsOptionsGetInternalServerError  %+v", 500, o.Payload)
}

func (o *PcloudVpnconnectionsOptionsGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
